use casper_types::ApiError;

#[repr(u16)]
pub enum Errors {
    TransferHelperWrongSender = 5,
    NotActive,
    InvalidReferrer,
    StakeIsNotInRange,
    StakeIsNotLargeEnough,
    TransferFailed,
    TransferFromFailed,
    SnapshotDayDoesNotExistYet,
    SnapshotAlreadyTakenForThatDay,
    LiquidityGuardIsNotActive,
    TransformerDefined,
    WrongTransformer,
    AmountsAlreadyDefined,
    NotAnActiveStake1,
    NotAnActiveStake2,
    NotAnActiveStake3,
    InvalidValue1,
    InvalidHash1,
    InvalidHash2,
    InvalidHash3,
    InvalidHash4,
    InvalidHash5,
    InvalidHash6,
    InvalidHash7,
    InvalidHash8,
    InvalidHash9,
    InvalidHash10,
    InvalidHash11,
    InvalidHash12,
    AdditionOverflow1,
    AdditionOverflow2,
    AdditionOverflow3,
    AdditionOverflow4,
    AdditionOverflow5,
    AdditionOverflow6,
    AdditionOverflow7,
    AdditionOverflow8,
    AdditionOverflow9,
    AdditionOverflow10,
    AdditionOverflow11,
    AdditionOverflow12,
    AdditionOverflow13,
    AdditionOverflow14,
    AdditionOverflow15,
    AdditionOverflow16,
    AdditionOverflow17,
    AdditionOverflow18,
    SubtractionUnderflow1,
    SubtractionUnderflow2,
    SubtractionUnderflow3,
    SubtractionUnderflow4,
    SubtractionUnderflow5,
    SubtractionUnderflow6,
    SubtractionUnderflow7,
    MultiplicationOverflow1,
    MultiplicationOverflow2,
    MultiplicationOverflow3,
    MultiplicationOverflow4,
    MultiplicationOverflow5,
    MultiplicationOverflow6,
    MultiplicationOverflow7,
    MultiplicationOverflow8,
    MultiplicationOverflow9,
    MultiplicationOverflow10,
    MultiplicationOverflow11,
    MultiplicationOverflow12,
    DivisionByZero1,
    DivisionByZero2,
    DivisionByZero3,
    DivisionByZero4,
    DivisionByZero5,
    DivisionByZero6,
    DivisionByZero7,
    DivisionByZero8,
    DivisionByZero9,
    DivisionByZero10,
}

impl From<Errors> for ApiError {
    fn from(error: Errors) -> ApiError {
        ApiError::User(error as u16)
    }
}
